// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Thunk.Services.Tree;

#nullable disable

namespace Thunk.Migrations.TreeFacadeMigrations
{
    [DbContext(typeof(TreeFacade))]
    [Migration("20240809142900_AddTreeFacade")]
    partial class AddTreeFacade
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Thunk.Services.Tree.TreeNode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_id");

                    b.Property<long?>("UserTreeId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_tree_id");

                    b.HasKey("Id")
                        .HasName("pk_nodes");

                    b.HasIndex("Name")
                        .HasDatabaseName("ix_nodes_name");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_nodes_parent_id");

                    b.HasIndex("UserTreeId")
                        .HasDatabaseName("ix_nodes_user_tree_id");

                    b.ToTable("nodes", (string)null);
                });

            modelBuilder.Entity("Thunk.Services.Tree.UserTree", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("TreeName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tree_name");

                    b.HasKey("Id")
                        .HasName("pk_user_trees");

                    b.HasIndex("TreeName")
                        .IsUnique()
                        .HasDatabaseName("ix_user_trees_tree_name");

                    b.ToTable("user_trees", (string)null);
                });

            modelBuilder.Entity("Thunk.Services.Tree.TreeNode", b =>
                {
                    b.HasOne("Thunk.Services.Tree.TreeNode", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_nodes_nodes_parent_id");

                    b.HasOne("Thunk.Services.Tree.UserTree", "UserTree")
                        .WithMany()
                        .HasForeignKey("UserTreeId")
                        .HasConstraintName("fk_nodes_user_trees_user_tree_id");

                    b.Navigation("Parent");

                    b.Navigation("UserTree");
                });

            modelBuilder.Entity("Thunk.Services.Tree.TreeNode", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
